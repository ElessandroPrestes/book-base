name: Laravel CI & Analysis

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  laravel-tests-and-analysis:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.1
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: book_db
        ports: ['3306:3306']
        options: >-
          --health-cmd="mysqladmin ping -h localhost -uroot -proot || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🧰 Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, bcmath, pdo_mysql, xdebug
          coverage: xdebug

      - name: 📦 Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: ⚙️ Copy .env.testing
        run: cp .env.testing .env

      - name: 🔑 Generate app key
        run: php artisan key:generate

      - name: 🧪 Run tests with coverage
        run: vendor/bin/pest --coverage-clover=coverage.xml

      - name: ✨ Analyze with SonarQube
        uses: SonarSource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=book-base
            -Dsonar.sources=.
            -Dsonar.php.coverage.reportPaths=coverage.xml
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: 📊 Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          flags: unittests
          name: Laravel Coverage
